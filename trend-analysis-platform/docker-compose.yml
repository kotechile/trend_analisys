services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: idea-burst-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Supabase-only)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: minimal
    container_name: idea-burst-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
        - VITE_APP_NAME=${VITE_APP_NAME}
        - VITE_DEBUG=${VITE_DEBUG}
    container_name: idea-burst-frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: idea-burst-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  redis_data:
  backend_logs:

networks:
  default:
    name: idea-burst-network